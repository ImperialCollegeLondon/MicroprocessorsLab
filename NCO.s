    #include <xc.inc>

;===================================DATA====================================

psect	udata_acs   ; reserve space in access ram
phase_jump:	ds  1
phase_accum:	ds  2

psect	data	    ; reserve space
lookup:		    ; currently a sine wave
   db	0x80, 0x83, 0x86, 0x89, 0x8c, 0x8f, 0x92, 0x95
   db	0x98, 0x9c, 0x9f, 0xa2, 0xa5, 0xa8, 0xab, 0xae
   db	0xb0, 0xb3, 0xb6, 0xb9, 0xbc, 0xbf, 0xc1, 0xc4
   db	0xc7, 0xc9, 0xcc, 0xce, 0xd1, 0xd3, 0xd5, 0xd8
   db	0xda, 0xdc, 0xde, 0xe0, 0xe2, 0xe4, 0xe6, 0xe8
   db	0xea, 0xeb, 0xed, 0xef, 0xf0, 0xf2, 0xf3, 0xf4
   db	0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfb, 0xfc
   db	0xfd, 0xfd, 0xfe, 0xfe, 0xfe, 0xff, 0xff, 0xff
   db	0xff, 0xff, 0xff, 0xff, 0xfe, 0xfe, 0xfd, 0xfd
   db	0xfc, 0xfc, 0xfb, 0xfa, 0xf9, 0xf8, 0xf7, 0xf6
   db	0xf5, 0xf4, 0xf2, 0xf1, 0xef, 0xee, 0xec, 0xeb
   db	0xe9, 0xe7, 0xe5, 0xe3, 0xe1, 0xdf, 0xdd, 0xdb
   db	0xd9, 0xd7, 0xd4, 0xd2, 0xcf, 0xcd, 0xca, 0xc8
   db	0xc5, 0xc3, 0xc0, 0xbd, 0xba, 0xb8, 0xb5, 0xb2
   db	0xaf, 0xac, 0xa9, 0xa6, 0xa3, 0xa0, 0x9d, 0x9a
   db	0x97, 0x94, 0x91, 0x8e, 0x8a, 0x87, 0x84, 0x81
   db	0x7e, 0x7b, 0x78, 0x75, 0x71, 0x6e, 0x6b, 0x68
   db	0x65, 0x62, 0x5f, 0x5c, 0x59, 0x56, 0x53, 0x50
   db	0x4d, 0x4a, 0x47, 0x45, 0x42, 0x3f, 0x3c, 0x3a
   db	0x37, 0x35, 0x32, 0x30, 0x2d, 0x2b, 0x28, 0x26
   db	0x24, 0x22, 0x20, 0x1e, 0x1c, 0x1a, 0x18, 0x16
   db	0x14, 0x13, 0x11, 0x10, 0x0e, 0x0d, 0x0b, 0x0a
   db	0x09, 0x08, 0x07, 0x06, 0x05, 0x04, 0x03, 0x03
   db	0x02, 0x02, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00
   db	0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x02, 0x02
   db	0x03, 0x04, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09
   db	0x0b, 0x0c, 0x0d, 0x0f, 0x10, 0x12, 0x14, 0x15
   db	0x17, 0x19, 0x1b, 0x1d, 0x1f, 0x21, 0x23, 0x25
   db	0x27, 0x2a, 0x2c, 0x2e, 0x31, 0x33, 0x36, 0x38
   db	0x3b, 0x3e, 0x40, 0x43, 0x46, 0x49, 0x4c, 0x4f
   db	0x51, 0x54, 0x57, 0x5a, 0x5d, 0x60, 0x63, 0x67
   db	0x6a, 0x6d, 0x70, 0x73, 0x76, 0x79, 0x7c
   lookup_length    EQU 0x100
   align	    2

;===================================INIT====================================
nco_setup:
clock_setup:
    clrf    T1CON,  A
    movlw   10001000B	; Set timer0 to 16-bit, Fosc/4
    movwf   T1CON,  A	; = 16MHz clock rate, approx 4ms rollover
    bsf	    TMR1IE	; Enable timer1 interrupt
    bsf     GIE		   ; Enable global interrupts

lookup_setup:
    ; Initialize phase accumulator
    clrf    phase_accum,   A
    clrf    phase_accum+1, A

main_loop:
    goto    main_loop    ; Infinite loop, processing happens in ISR

;===================================ISR====================================
interrupt_service:
    bcf     TMR1IF ; Clear Timer1 interrupt flag

    ; Increment phase accumulator
    movf    phase_jump, W,  A
    addwf   phase_accum, F, A
    ;btfsc   STATUS, C
    incf    phase_accum+1, F,	A

    ; Use upper 8 bits of phase_accum for lookup
    movf    phase_accum+1, W,	A
    call    lookup
    movwf   PORTC,  A ; Output waveform to DAC

    retfie
